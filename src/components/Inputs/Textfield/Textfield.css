.m-input-container {
    position: relative;
    margin-bottom: var(--input-margin-bottom);
}

.m-input-container .m-input {
    border: none;
    outline: none;
    height: var(--input-height);
    font-size: var(--input-font-size);
    padding-left: var(--input-padding-left);
    box-sizing: border-box;
    border-radius: var(--border-radius);
    transition: 0.2s ease-in-out;
    color: inherit;
}

.m-input-container .m-input.left {
}

.m-input-container .m-input.right {
}

.m-input-container .m-input:hover {
    transition: 0.2s;
}
.m-input-container .m-input:focus {
    transition: 0.1s;
}

.m-input-label {
    color: inherit;
    position: absolute;
    font-size: var(--input-font-size);
    padding-left: var(--input-label-padding-left);
    pointer-events: none;
    transition: 0.2s;
}

.m-input-label.floating {
    transform-origin: 0 0;
    transform: translate(var(--floating-label-translate-x), var(--floating-label-translate-y));
}

.m-input-label.floating.filled,
.m-input-label.floating.focused {
    transform: translate(var(--floating-label-translate-x-active), var(--floating-label-translate-y-active));
    font-size: var(--floating-label--font-size-active);
}

.m-input-label.left,
.m-input-label.right {
    height: 100%;
    position: absolute;
    top: 0;
    display: flex;
    align-items: center;
}

.m-input-label.left {
    left: 0;
}

.m-input-label.right {
}

/* error section */
.m-input-container.error .m-input {
    border: 1px solid var(--failure-color);
    color: var(--failure-color) !important;
}

.m-input-container.error .m-input:focus {
    box-shadow: var(--big-box-shadow) var(--failure-color);
}

.m-input-container.error .m-input:not(:disabled)::placeholder {
    color: var(--failure-color) !important;
}

.m-input-container.error .m-input-label {
    color: var(--failure-color) !important;
}
